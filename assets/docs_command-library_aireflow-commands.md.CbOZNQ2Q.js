import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.ttppV29E.js";const t="/assets/aireflow-commands-1.C24Yfvvy.png",n="/assets/aireflow-commands-2.BCLEs3rT.png",x=JSON.parse('{"title":"AireFlow Commands","description":"","frontmatter":{},"headers":[],"relativePath":"docs/command-library/aireflow-commands.md","filePath":"docs/command-library/aireflow-commands.md","lastUpdated":1750165518000}'),h={name:"docs/command-library/aireflow-commands.md"},l=e('<h1 id="aireflow-commands" tabindex="-1">AireFlow Commands <a class="header-anchor" href="#aireflow-commands" aria-label="Permalink to &quot;AireFlow Commands&quot;">​</a></h1><p>A library of test commands to use when testing <code>AireFlow</code></p><h2 id="identifying-the-aireflow-flow-to-test" tabindex="-1">Identifying the AireFlow Flow to Test <a class="header-anchor" href="#identifying-the-aireflow-flow-to-test" aria-label="Permalink to &quot;Identifying the AireFlow Flow to Test&quot;">​</a></h2><p>AireAssert will need to know which recorded flow in <code>AireFlow</code> to inspect. Our <code>AireSuite</code> products are joined together with a <strong>CorrelationId</strong> - created by the first product interacted with by a user (usually a form) and passed through to all subsequest products. If you have submitted a form as part of your test then you don&#39;t need to do anything - subsequent assertions will target flows triggered by your form.</p><p>If you do not have a form to trigger with, but you know the <strong>CorrelationId</strong> of your flow you can set this up with a <strong>GIVEN</strong> step:</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Given </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a Correlation ID of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#39;</span></span></code></pre></div><h2 id="triggering-a-flow" tabindex="-1">Triggering a Flow <a class="header-anchor" href="#triggering-a-flow" aria-label="Permalink to &quot;Triggering a Flow&quot;">​</a></h2><p>For information on how to setup a trigger on <code>AireFlow</code>, please see the <a href="https://docs.aireflow.co.uk/" target="_blank" rel="noreferrer">AireFlow Documentation</a> site <br></p><p>While ideally you will trigger a flow with a form submission, it is also possible to directly trigger a flow. You will need the routing key of the event that triggers the flow. You can find this under <strong>Event Definitions</strong> in your target <code>AireFlow</code> instance.</p><p>Next you will need a payload to send, this is a block of XML. Add an XML file within an &#39;AireFlowPayloads&#39; directory in your Test Set:</p><p><img src="'+t+`" alt="aireflow-commands"></p><p>Your payloads can be templateable. In your XML use the --<em>TOKENNAME</em>-- format to show where data can be passed in, e.g.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">myparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mynode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;--*some-token*--&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mynode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">myparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Now we are ready to trigger the flow:</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">When </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">we trigger aireflow event </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> with payload </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">| some-token       | Value to inject into XML |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">| some-other-token | Some other value         |</span></span></code></pre></div><p>The command succeeds if <code>AireFlow</code> accepts the trigger.</p><h2 id="aireflow-tasks" tabindex="-1">AireFlow Tasks <a class="header-anchor" href="#aireflow-tasks" aria-label="Permalink to &quot;AireFlow Tasks&quot;">​</a></h2><p>An <code>AireFlow</code> task represents a single action within a workflow. You refer to a task using its key, and can then assert on its State or Properties</p><p>To find the key for your task, view it in the <code>AireFlow</code> designer:</p><p><img src="`+n+`" alt="aireflow-commands"></p><h3 id="asserting-a-task-has-run" tabindex="-1">Asserting a Task Has Run <a class="header-anchor" href="#asserting-a-task-has-run" aria-label="Permalink to &quot;Asserting a Task Has Run&quot;">​</a></h3><p>We can confirm that a task has been run:</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has been run</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has been run within x seconds</span></span></code></pre></div><h3 id="checking-task-status" tabindex="-1">Checking Task Status <a class="header-anchor" href="#checking-task-status" aria-label="Permalink to &quot;Checking Task Status&quot;">​</a></h3><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has status of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has status of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> within x seconds</span></span></code></pre></div><h3 id="state-assertions" tabindex="-1">State Assertions <a class="header-anchor" href="#state-assertions" aria-label="Permalink to &quot;State Assertions&quot;">​</a></h3><p>Each task can have <strong><em>state</em></strong> assigned, this is a set of key/value pairs which you can see in the API definition</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has state</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has state within x seconds</span></span></code></pre></div><p>Verifies that the specified task has some state assigned, either now or within the timeout period specified.</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has state </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has state </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> within x seconds</span></span></code></pre></div><p>Verifies that the specified <strong><em>state</em></strong> value exists on a task, either now or within the timeout period specified.</p><h3 id="property-assertions" tabindex="-1">Property Assertions <a class="header-anchor" href="#property-assertions" aria-label="Permalink to &quot;Property Assertions&quot;">​</a></h3><p>A property is any of the basic properties available under <strong><em>ActivityContext</em></strong> in the API Definition</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has properties</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has properties within x seconds</span></span></code></pre></div><p>Verifies that the task has properties, either now or within the timeout period specified.</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has property </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has property </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> of </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> within x seconds</span></span></code></pre></div><p>Verifies that the specified Property value exists on a task, either now or within the timeout period specified.</p><h3 id="verifying-task-metadata" tabindex="-1">Verifying Task Metadata <a class="header-anchor" href="#verifying-task-metadata" aria-label="Permalink to &quot;Verifying Task Metadata&quot;">​</a></h3><ul><li><strong>Name</strong><br> Assert the task’s display name with a “has name ‘TaskName’” step (optionally within a timeout).</li></ul><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> within x seconds</span></span></code></pre></div><ul><li><strong>Description</strong><br> Assert the task’s description text with a “has description ‘TaskDescription’” step (optionally within a timeout).</li></ul><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has description </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Then </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aireflow task </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> has description </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> within x seconds</span></span></code></pre></div>`,42),p=[l];function r(o,k,d,g,E,c){return a(),i("div",null,p)}const u=s(h,[["render",r]]);export{x as __pageData,u as default};
