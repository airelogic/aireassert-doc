import{_ as e,c as t,o,a4 as a}from"./chunks/framework.ttppV29E.js";const b=JSON.parse('{"title":"Webhooks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/advanced-topics/webhooks.md","filePath":"docs/advanced-topics/webhooks.md","lastUpdated":1754908411000}'),s={name:"docs/advanced-topics/webhooks.md"},r=a('<h1 id="webhooks" tabindex="-1">Webhooks <a class="header-anchor" href="#webhooks" aria-label="Permalink to &quot;Webhooks&quot;">​</a></h1><h2 id="test-result-notification-webhook" tabindex="-1">Test Result Notification Webhook <a class="header-anchor" href="#test-result-notification-webhook" aria-label="Permalink to &quot;Test Result Notification Webhook&quot;">​</a></h2><p>AireAssert can send you a webhook notification when a testrun completes, with information about the run in a JSON format</p><h3 id="creating-a-secret" tabindex="-1">Creating a secret <a class="header-anchor" href="#creating-a-secret" aria-label="Permalink to &quot;Creating a secret&quot;">​</a></h3><p>In order to recieve webhooks from AireLogic you will need a secret to sign the messages with. You will need to contact your AireLogic representative for this. AireLogic can generate a secret for you, or you can supply us with one of your own.</p><p>This secret will be used to hash the results, and this will be supplied in the &#39;x-hmac-hash&#39; header on the webhook requests. You can then use the secret to un-hash the header and check that the result matches the request body. For more information see <a href="https://en.wikipedia.org/wiki/HMAC" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/HMAC</a></p><h3 id="setting-the-testhook-target" tabindex="-1">Setting the testhook target <a class="header-anchor" href="#setting-the-testhook-target" aria-label="Permalink to &quot;Setting the testhook target&quot;">​</a></h3><p>The target can be set in the UI via the TestSet properties panel.</p>',8),i=[r];function h(n,c,d,l,u,p){return o(),t("div",null,i)}const _=e(s,[["render",h]]);export{b as __pageData,_ as default};
