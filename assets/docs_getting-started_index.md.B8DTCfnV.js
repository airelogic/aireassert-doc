import{_ as e,c as t,o as s,a4 as i}from"./chunks/framework.ttppV29E.js";const k=JSON.parse('{"title":"Getting Started with AireAssert","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/index.md","filePath":"docs/getting-started/index.md","lastUpdated":1749121527000}'),a={name:"docs/getting-started/index.md"},n=i(`<h1 id="getting-started-with-aireassert" tabindex="-1">Getting Started with AireAssert <a class="header-anchor" href="#getting-started-with-aireassert" aria-label="Permalink to &quot;Getting Started with AireAssert&quot;">​</a></h1><p>This guide will walk you through creating your first <strong>AireAssert</strong> test for an <strong>AireForm</strong>.</p><p>You&#39;ll learn:</p><ul><li>How to setup AireAssert for testing</li><li>The structure of an AireAssert Test Set</li><li>How to write a basic AireForm test</li></ul><h2 id="getting-access" tabindex="-1">Getting Access <a class="header-anchor" href="#getting-access" aria-label="Permalink to &quot;Getting Access&quot;">​</a></h2><ol><li><p>Visit the <strong>AireAssert</strong> site and log in using your email address.</p></li><li><p>Check the left-hand panel under <strong>Repositories</strong>. If no repositories are listed, contact your administrator. They can assign a repository directly to you or add you to the appropriate user group.</p></li></ol><h2 id="creating-your-test-set-and-feature-file" tabindex="-1">Creating Your Test Set and Feature File <a class="header-anchor" href="#creating-your-test-set-and-feature-file" aria-label="Permalink to &quot;Creating Your Test Set and Feature File&quot;">​</a></h2><p>See the <a href="/docs/using-the-test-editor/repositories-tree-view.html"><strong>Repositories Tree View</strong></a> section</p><h2 id="writing-your-first-feature-test" tabindex="-1">Writing Your First Feature (Test) <a class="header-anchor" href="#writing-your-first-feature-test" aria-label="Permalink to &quot;Writing Your First Feature (Test)&quot;">​</a></h2><p>A feature file is a human-readable collection of test commands that not only exercise your form but also document its behaviour.</p><blockquote><p><strong>Note:</strong> Feature files use Gherkin syntax, but AireAssert supports only a subset of Gherkin. You may only use the commands provided in the <a href="/docs/command-library/aireform-commands.html"><strong>Command Library</strong></a>.</p></blockquote><p>AireAssert includes a built-in feature-file editor (see <a href="/docs/using-the-test-editor/test-editor.html"><strong>Using the Test Editor</strong></a>), though you’re free to use any text editor you prefer.</p><p>Create a new file named <code>bmi-reporting.feature</code> (or use a name that matches your form) inside the <strong>Features</strong> folder, and populate it with the following content:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Feature: BMI Reporting</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   The BMI Reporting form allows patients to submit their height and</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   weight information instead of having to visit a doctors surgery</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scenario: Underweight Patient</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Given we are completing the bmi-reporting eform</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    When we set &#39;Height (m)&#39; to &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    And we set &#39;Weight (kg)&#39; to &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Then the &#39;BMI&#39; form section is visible</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    And &#39;BMI&#39; shows &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    And &#39;Weight appropriate&#39; shows &#39;Underweight&#39;</span></span></code></pre></div><p>Let’s break down each part of the <code>*.feature</code> file:</p><ol><li><p><strong>Feature Title</strong><br> The first line (<code>Feature: …</code>) is simply a human-readable title.</p></li><li><p><strong>Optional Description Block</strong><br> You can add one or more lines of descriptive text beneath the title to explain the behaviour you’re defining. This is not required, but it’s highly recommended for documentation purposes.</p></li><li><p><strong>Scenario(s)</strong><br> A single feature file can contain multiple scenarios. Each scenario represents a discrete test case.</p><ul><li><p><strong>GIVEN</strong><br> Always begins with a <code>Given</code> step, which loads the form under test. The form name should match the URI segment you’d see in your browser.</p></li><li><p><strong>WHEN / THEN</strong></p><ul><li>A <code>When</code> step represents an action or interaction with the form (e.g., clicking a button, entering text).</li><li>A <code>Then</code> step performs an assertion, verifying that the form reacted as expected.</li></ul></li></ul><p>Because the file reads like plain English, you can “walk through” the scenario on the live form to see exactly what each step does.</p></li></ol><hr><h3 id="tips-gotchas" tabindex="-1">Tips &amp; Gotchas <a class="header-anchor" href="#tips-gotchas" aria-label="Permalink to &quot;Tips &amp; Gotchas&quot;">​</a></h3><ul><li><p><strong>Field Labels:</strong><br> You refer to form fields by their labels. If a label contains a single quote (<code>&#39;</code>), omit the quote in your test.</p><div class="language-gherkin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gherkin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Label: My item’s date</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test step:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">When </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">I enter </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2025-01-01&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> into the field </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My items date&quot;</span></span></code></pre></div></li><li><p><strong>Field IDs:</strong> If you prefer, you can reference fields by their underlying ID instead of the visible label.</p></li><li><p><strong>Case Sensitivity:</strong> Field labels are case-sensitive—make sure your steps match the exact casing of the form labels.</p></li></ul><h2 id="pushing-your-changes" tabindex="-1">Pushing Your Changes <a class="header-anchor" href="#pushing-your-changes" aria-label="Permalink to &quot;Pushing Your Changes&quot;">​</a></h2><p>Push your changes to the Test Sets repository back to Git so they can be picked up by the application.</p><h2 id="running-your-test" tabindex="-1">Running Your Test <a class="header-anchor" href="#running-your-test" aria-label="Permalink to &quot;Running Your Test&quot;">​</a></h2><p>Refer to the <a href="/docs/getting-started/running-test-set.html"><strong>Running a Test Set</strong></a> section.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Review the available test commands in the <a href="/docs/command-library/aireform-commands.html"><strong>Command Library</strong></a> section.</p>`,25),r=[n];function o(l,h,p,d,c,g){return s(),t("div",null,r)}const m=e(a,[["render",o]]);export{k as __pageData,m as default};
